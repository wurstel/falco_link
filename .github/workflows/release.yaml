---
name: Release Rulesfile
on: push
jobs:
  Release-Rulesfile:
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
      packages: write

    env:
      # Ïã§Ï†ú Falco Í∑úÏπô ÌååÏùº Ïù¥Î¶ÑÏúºÎ°ú Î≥ÄÍ≤ΩÌïòÏÑ∏Ïöî
      RULESET_FILE: falco_custom_rules.yaml
      # Used to setup Auth and OCI artifact location
      OCI_REGISTRY: ghcr.io
      # OCI ÏïÑÌã∞Ìå©Ìä∏ Ïù¥Î¶ÑÏùÑ ÏõêÌïòÎäî ÎåÄÎ°ú Î≥ÄÍ≤ΩÌïòÏÑ∏Ïöî
      # Ïòà: ghcr.io/your-username/your-repo/falco-rules:main
      OCI_ARTIFACT_NAME: falco-rules
      # Î∏åÎûúÏπòÎ™ÖÏóêÏÑú Ïä¨ÎûòÏãúÎ•º ÌïòÏù¥ÌîàÏúºÎ°ú Î≥ÄÍ≤ΩÌïòÏó¨ OCI ÌÉúÍ∑∏ Ìò∏ÌôòÏÑ± ÌôïÎ≥¥
      OCI_ARTIFACT_VERSION: ${{ github.ref_name }}

    steps:

      - name: Checkout Falcoctl Repo
        uses: actions/checkout@v4
        with:
          repository: falcosecurity/falcoctl
          ref: main
          path: tools/falcoctl

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: '^1.21'
          cache-dependency-path: tools/falcoctl/go.sum

      - name: Build falcoctl
        run: make
        working-directory: tools/falcoctl

      - name: Checkout Rules Repo
        uses: actions/checkout@v4
        with:
          path: rules

      - name: Verify Rules File Exists
        run: |
          if [ ! -f "rules/${RULESET_FILE}" ]; then
            echo "‚ùå Error: Rules file 'rules/${RULESET_FILE}' not found!"
            echo "Available files in rules directory:"
            ls -la rules/
            exit 1
          fi
          echo "‚úÖ Rules file found: rules/${RULESET_FILE}"

      - name: Normalize OCI Tag
        run: |
          # OCI ÌÉúÍ∑∏ÏóêÏÑú ÌóàÏö©ÎêòÏßÄ ÏïäÎäî Î¨∏ÏûêÎì§ÏùÑ ÌïòÏù¥ÌîàÏúºÎ°ú Î≥ÄÍ≤Ω
          NORMALIZED_VERSION=$(echo "${OCI_ARTIFACT_VERSION}" | sed 's/[^a-zA-Z0-9._-]/-/g')
          echo "NORMALIZED_OCI_VERSION=${NORMALIZED_VERSION}" >> $GITHUB_ENV
          echo "Original version: ${OCI_ARTIFACT_VERSION}"
          echo "Normalized version: ${NORMALIZED_VERSION}"

      - name: Upload OCI artifacts to GitHub packages
        run: |
          echo "üöÄ Starting OCI artifact upload..."
          echo "Registry: ${OCI_REGISTRY}"
          echo "Repository: ${GITHUB_REPOSITORY}"
          echo "Artifact Name: ${OCI_ARTIFACT_NAME}"
          echo "Original Version: ${OCI_ARTIFACT_VERSION}"
          echo "Normalized Version: ${NORMALIZED_OCI_VERSION}"
          echo "Rules File: rules/${RULESET_FILE}"
          echo ""
          
          # Check if falcoctl binary exists and is executable
          if [ ! -x "tools/falcoctl/falcoctl" ]; then
            echo "‚ùå Error: falcoctl binary not found or not executable"
            exit 1
          fi
          
          # Push the artifact with normalized version
          tools/falcoctl/falcoctl registry push \
            --config /dev/null \
            --type rulesfile \
            --version ${NORMALIZED_OCI_VERSION} \
            ${OCI_REGISTRY}/${GITHUB_REPOSITORY}/${OCI_ARTIFACT_NAME}:${NORMALIZED_OCI_VERSION} \
            rules/${RULESET_FILE}
          
          echo "‚úÖ Successfully uploaded OCI artifact!"
        env:
          FALCOCTL_REGISTRY_AUTH_BASIC: ${{ env.OCI_REGISTRY }},${{ github.repository_owner }},${{ secrets.GITHUB_TOKEN }}
